language: csharp
mono: none
dotnet: 3.1
services:
  - docker

solution: DetectiCam.sln

#stages:
#  - name: "Build & Publish Code Analysis"
#    if: branch = master
#  - name: "Build"
#    if: branch != master

# Commented to try out the sonar branch based approach.


jobs:
  include:
    - stage: "Build & Publish Code Analysis"
      script:
        - dotnet restore
        - dotnet tool restore
        - dotnet tool run dotnet-sonarscanner begin /o:"raimondb" /k:"RaimondB_Detecticam"  /d:sonar.login="${SONAR_TOKEN}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.branch.name="${TRAVIS_BRANCH}"
        - dotnet test
        - dotnet tool run dotnet-sonarscanner end /d:sonar.login="${SONAR_TOKEN}"
    - stage: "Build Docker Image & Test"
      script:
        - docker-compose -f DetectiCam/docker-compose.test.yml run sut