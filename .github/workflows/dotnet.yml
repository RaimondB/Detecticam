# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Integration Tests
      run: docker-compose -f DetectiCam/docker-compose.test.yml run sut

  release:
    if: ${{ github.ref_name == 'master'}}
    runs-on: ubuntu-20.04
    steps:
    - name: Build and export to Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Detecticam/Dockerfile
        load: true
        tags: opencv-dotnet-runtime-deps
    - uses: actions/setup-node@v3
      with:
# See below for current versions supported by Node-red
# https://nodered.org/docs/faq/node-versions#installing-nodejs
        node-version: 18
        registry-url: https://registry.npmjs.org/
    - run: npm install
    - run: npx semantic-release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
